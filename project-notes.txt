Front-end: HTML/CSS (Use Flexbox and CSS grid)
Access data from server: SQL, PostgresSQL
Display server data on website:
Analyze data: Python (Django)
Present Data on website: ???



The user will have two dropdown menus.
In the dropdown menus, there will exist a list of health traits.
Each trait will have an associated numerical data.
When the user selects the traits they wish to relate, they will hit 'run'.
A x vs y scatter plot will appear with an R2 value.
Therefore, the user can 'discover' relationships in health data simply by selecting the traits as listed in a database.
Then, a 'restart' button will reset the program.


Project Workflow
Write SQL (the most popular RDBMS) to access a health database.
Display dropdown list of potential traits that the user can select
Record users selection of two traits, upon them running the search
You can mix-and-match databases, to provide more variety and freedom in your analysis
Write SQL to gather and store the list
Write Python (Django or Flask) to parse through the numbers
Display the relationship in a graph, State the R^2 Value

Step Zero: Design Front-end of website in HTML and CSS


Step One: Accessing and querying a healthcare database
Database must contain a ton of quantifiable quantifiable health metrics.
Article with examples https://medium.com/@ODSC/15-open-datasets-for-healthcare-830b19980d9
MIMIC-III is part of PhysioNet.org - a website dedicated to physiological data science projects.
MIMIC-II is a public Data Set with 110 patient entries. https://archive.physionet.org/physiobank/database/mimic2cdb-ps/
PhysioNet's open datasets may allow the user to access one or many comparisons across many databases. When running their analysis.
